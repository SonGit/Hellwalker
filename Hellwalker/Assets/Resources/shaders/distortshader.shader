Shader "Unlit/DistortTexture" {
	Properties {
		_MainTex ("Base (RGB)", 2D) = "white" {}
		_Color ("Main Color", Vector) = (1,1,1,1)
		_Alpha ("Alpha", Range(0, 1)) = 1
		_SpeedX ("SpeedX", Float) = 1.5
		_SpeedY ("SpeedY", Float) = 1.5
		_Scale ("Scale", Range(0.005, 0.2)) = 0.3
		_TileX ("TileX", Float) = 5
		_TileY ("TileY", Float) = 5
	}
	SubShader {
		LOD 200
		Tags { "QUEUE" = "Transparent" "RenderType" = "Transparent" }
		Pass {
			Name "FORWARD"
			LOD 200
			Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ColorMask RGB -1
			ZClip Off
			ZWrite Off
			GpuProgramID 14685
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   float4 unity_SHAb;
					//   float4 unity_SHAg;
					//   float4 unity_SHAr;
					//   float4 unity_SHBb;
					//   float4 unity_SHBg;
					//   float4 unity_SHBr;
					//   float4 unity_SHC;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//   unity_SHAr          c11      1
					//   unity_SHAg          c12      1
					//   unity_SHAb          c13      1
					//   unity_SHBr          c14      1
					//   unity_SHBg          c15      1
					//   unity_SHBb          c16      1
					//   unity_SHC           c17      1
					//   _MainTex_ST         c18      1
					//
					
					    vs_3_0
					    def c19, 1.05499995, -0.0549999997, 0, 0
					    def c20, 1, 0, 0.416666657, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4.xyz
					    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r4.x, c4, r1
					    dp4 r4.y, c5, r1
					    dp4 r4.z, c6, r1
					    dp4 r4.w, c7, r1
					    mad o1.xy, v2, c18, c18.zwzw
					    dp4 o3.x, c0, v0
					    dp4 o3.y, c1, v0
					    dp4 o3.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    nrm r1.xyz, r0
					    mul r0.x, r1.y, r1.y
					    mad r0.x, r1.x, r1.x, -r0.x
					    mul r2, r1.yzzx, r1.xyzz
					    dp4 r3.x, c14, r2
					    dp4 r3.y, c15, r2
					    dp4 r3.z, c16, r2
					    mad r0.xyz, c17, r0.x, r3
					    mov r1.w, c20.x
					    dp4 r2.x, c11, r1
					    dp4 r2.y, c12, r1
					    dp4 r2.z, c13, r1
					    mov o2.xyz, r1
					    add r0.xyz, r0, r2
					    max r0.xyz, r0, c20.y
					    log r1.x, r0.x
					    log r1.y, r0.y
					    log r1.z, r0.z
					    mul r0.xyz, r1, c20.z
					    exp r1.x, r0.x
					    exp r1.y, r0.y
					    exp r1.z, r0.z
					    mad r0.xyz, r1, c19.x, c19.y
					    max o4.xyz, r0, c20.y
					    mad o0.xy, r4.w, c255, r4
					    mov o0.zw, r4
					
					// approximately 44 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_8[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[3];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD2.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = u_xlat0.xyz;
					    u_xlat1.x = u_xlat0.y * u_xlat0.y;
					    u_xlat1.x = u_xlat0.x * u_xlat0.x + (-u_xlat1.x);
					    u_xlat2 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat3.x = dot(unity_SHBr, u_xlat2);
					    u_xlat3.y = dot(unity_SHBg, u_xlat2);
					    u_xlat3.z = dot(unity_SHBb, u_xlat2);
					    u_xlat1.xyz = unity_SHC.xyz * u_xlat1.xxx + u_xlat3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat2.x = dot(unity_SHAr, u_xlat0);
					    u_xlat2.y = dot(unity_SHAg, u_xlat0);
					    u_xlat2.z = dot(unity_SHAb, u_xlat0);
					    u_xlat0.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD3.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_DynamicLightmapST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                    Reg   Size
					//   ----------------------- ----- ----
					//   unity_ObjectToWorld     c0       4
					//   unity_MatrixVP          c4       4
					//   unity_WorldToObject     c8       3
					//   unity_DynamicLightmapST c11      1
					//   _MainTex_ST             c12      1
					//
					
					    vs_3_0
					    def c13, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_texcoord2 v3
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4.xyz
					    dcl_texcoord5 o5
					    mad r0, v0.xyzx, c13.xxxy, c13.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o1.xy, v2, c12, c12.zwzw
					    dp4 o3.x, c0, v0
					    dp4 o3.y, c1, v0
					    dp4 o3.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul o2.xyz, r0.w, r0
					    mad o5.zw, v3.xyxy, c11.xyxy, c11
					    mov o4.xyz, c13.y
					    mov o5.xy, c13.y
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 24 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[3];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unused_3_0;
						vec4 unity_DynamicLightmapST;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD2;
					out vec2 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD2.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    vs_TEXCOORD3.xyz = vec3(0.0, 0.0, 0.0);
					    vs_TEXCOORD5.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
					    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_LightmapST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//   unity_LightmapST    c11      1
					//   _MainTex_ST         c12      1
					//
					
					    vs_3_0
					    def c13, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_texcoord1 v3
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4
					    mad r0, v0.xyzx, c13.xxxy, c13.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o1.xy, v2, c12, c12.zwzw
					    dp4 o3.x, c0, v0
					    dp4 o3.y, c1, v0
					    dp4 o3.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul o2.xyz, r0.w, r0
					    mad o4.xy, v3, c11, c11.zwzw
					    mov o4.zw, c13.y
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 23 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[3];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec2 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD2.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_DynamicLightmapST;
					//   float4 unity_LightmapST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                    Reg   Size
					//   ----------------------- ----- ----
					//   unity_ObjectToWorld     c0       4
					//   unity_MatrixVP          c4       4
					//   unity_WorldToObject     c8       3
					//   unity_LightmapST        c11      1
					//   unity_DynamicLightmapST c12      1
					//   _MainTex_ST             c13      1
					//
					
					    vs_3_0
					    def c14, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_texcoord1 v3
					    dcl_texcoord2 v4
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4
					    mad r0, v0.xyzx, c14.xxxy, c14.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o1.xy, v2, c13, c13.zwzw
					    dp4 o3.x, c0, v0
					    dp4 o3.y, c1, v0
					    dp4 o3.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul o2.xyz, r0.w, r0
					    mad o4.zw, v4.xyxy, c12.xyxy, c12
					    mad o4.xy, v3, c11, c11.zwzw
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 23 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[3];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unity_DynamicLightmapST;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					in  vec4 in_TEXCOORD2;
					out vec2 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD2.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_4LightAtten0;
					//   float4 unity_4LightPosX0;
					//   float4 unity_4LightPosY0;
					//   float4 unity_4LightPosZ0;
					//   float4 unity_LightColor[8];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   float4 unity_SHAb;
					//   float4 unity_SHAg;
					//   float4 unity_SHAr;
					//   float4 unity_SHBb;
					//   float4 unity_SHBg;
					//   float4 unity_SHBr;
					//   float4 unity_SHC;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_LightColor    c0       4
					//   unity_ObjectToWorld c4       4
					//   unity_MatrixVP      c8       4
					//   unity_WorldToObject c12      3
					//   unity_4LightPosX0   c15      1
					//   unity_4LightPosY0   c16      1
					//   unity_4LightPosZ0   c17      1
					//   unity_4LightAtten0  c18      1
					//   unity_SHAr          c19      1
					//   unity_SHAg          c20      1
					//   unity_SHAb          c21      1
					//   unity_SHBr          c22      1
					//   unity_SHBg          c23      1
					//   unity_SHBb          c24      1
					//   unity_SHC           c25      1
					//   _MainTex_ST         c26      1
					//
					
					    vs_3_0
					    def c27, 1.05499995, -0.0549999997, 0, 0
					    def c28, 1, 0, 0.416666657, 9.99999997e-007
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4.xyz
					    mad r0, v0.xyzx, c28.xxxy, c28.yyyx
					    dp4 r1.x, c4, r0
					    dp4 r1.y, c5, r0
					    dp4 r1.z, c6, r0
					    dp4 r1.w, c7, r0
					    dp4 r6.x, c8, r1
					    dp4 r6.y, c9, r1
					    dp4 r6.z, c10, r1
					    dp4 r6.w, c11, r1
					    mad o1.xy, v2, c26, c26.zwzw
					    mul r0.xyz, c13, v1.y
					    mad r0.xyz, v1.x, c12, r0
					    mad r0.xyz, v1.z, c14, r0
					    nrm r1.xyz, r0
					    mul r0.x, r1.y, r1.y
					    mad r0.x, r1.x, r1.x, -r0.x
					    mul r2, r1.yzzx, r1.xyzz
					    dp4 r3.x, c22, r2
					    dp4 r3.y, c23, r2
					    dp4 r3.z, c24, r2
					    mad r0.xyz, c25, r0.x, r3
					    mov r1.w, c28.x
					    dp4 r2.x, c19, r1
					    dp4 r2.y, c20, r1
					    dp4 r2.z, c21, r1
					    add r0.xyz, r0, r2
					    max r0.xyz, r0, c28.y
					    log r2.x, r0.x
					    log r2.y, r0.y
					    log r2.z, r0.z
					    mul r0.xyz, r2, c28.z
					    exp r2.x, r0.x
					    exp r2.y, r0.y
					    exp r2.z, r0.z
					    mad r0.xyz, r2, c27.x, c27.y
					    max r0.xyz, r0, c28.y
					    dp4 r2.y, c5, v0
					    add r3, -r2.y, c16
					    mul r4, r1.y, r3
					    mul r3, r3, r3
					    dp4 r2.x, c4, v0
					    add r5, -r2.x, c15
					    mad r4, r5, r1.x, r4
					    mad r3, r5, r5, r3
					    dp4 r2.z, c6, v0
					    add r5, -r2.z, c17
					    mov o3.xyz, r2
					    mad r2, r5, r1.z, r4
					    mov o2.xyz, r1
					    mad r1, r5, r5, r3
					    max r1, r1, c28.w
					    rsq r3.x, r1.x
					    rsq r3.y, r1.y
					    rsq r3.z, r1.z
					    rsq r3.w, r1.w
					    mov r4.x, c28.x
					    mad r1, r1, c18, r4.x
					    mul r2, r2, r3
					    max r2, r2, c28.y
					    rcp r3.x, r1.x
					    rcp r3.y, r1.y
					    rcp r3.z, r1.z
					    rcp r3.w, r1.w
					    mul r1, r2, r3
					    mul r2.xyz, r1.y, c1
					    mad r2.xyz, c0, r1.x, r2
					    mad r1.xyz, c2, r1.z, r2
					    mad r1.xyz, c3, r1.w, r1
					    add o4.xyz, r0, r1
					    mad o0.xy, r6.w, c255, r6
					    mov o0.zw, r6
					
					// approximately 73 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[2];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[31];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_14[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[3];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					float u_xlat18;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat18 = inversesqrt(u_xlat18);
					    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    vs_TEXCOORD2.xyz = u_xlat0.xyz;
					    u_xlat18 = u_xlat1.y * u_xlat1.y;
					    u_xlat18 = u_xlat1.x * u_xlat1.x + (-u_xlat18);
					    u_xlat2 = u_xlat1.yzzx * u_xlat1.xyzz;
					    u_xlat3.x = dot(unity_SHBr, u_xlat2);
					    u_xlat3.y = dot(unity_SHBg, u_xlat2);
					    u_xlat3.z = dot(unity_SHBb, u_xlat2);
					    u_xlat2.xyz = unity_SHC.xyz * vec3(u_xlat18) + u_xlat3.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat3.x = dot(unity_SHAr, u_xlat1);
					    u_xlat3.y = dot(unity_SHAg, u_xlat1);
					    u_xlat3.z = dot(unity_SHAb, u_xlat1);
					    u_xlat2.xyz = u_xlat2.xyz + u_xlat3.xyz;
					    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat2.xyz = log2(u_xlat2.xyz);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat2.xyz = exp2(u_xlat2.xyz);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat4 = u_xlat1.yyyy * u_xlat3;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat4 = u_xlat5 * u_xlat1.xxxx + u_xlat4;
					    u_xlat1 = u_xlat0 * u_xlat1.zzzz + u_xlat4;
					    u_xlat3 = u_xlat5 * u_xlat5 + u_xlat3;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat3;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    vs_TEXCOORD3.xyz = u_xlat0.xyz + u_xlat2.xyz;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_4LightAtten0;
					//   float4 unity_4LightPosX0;
					//   float4 unity_4LightPosY0;
					//   float4 unity_4LightPosZ0;
					//   float4 unity_DynamicLightmapST;
					//   float4 unity_LightColor[8];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                    Reg   Size
					//   ----------------------- ----- ----
					//   unity_LightColor        c0       4
					//   unity_ObjectToWorld     c4       4
					//   unity_MatrixVP          c8       4
					//   unity_WorldToObject     c12      3
					//   unity_4LightPosX0       c15      1
					//   unity_4LightPosY0       c16      1
					//   unity_4LightPosZ0       c17      1
					//   unity_4LightAtten0      c18      1
					//   unity_DynamicLightmapST c19      1
					//   _MainTex_ST             c20      1
					//
					
					    vs_3_0
					    def c21, 1, 0, 9.99999997e-007, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_texcoord2 v3
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4.xyz
					    dcl_texcoord5 o5
					    mad r0, v0.xyzx, c21.xxxy, c21.yyyx
					    dp4 r1.x, c4, r0
					    dp4 r1.y, c5, r0
					    dp4 r1.z, c6, r0
					    dp4 r1.w, c7, r0
					    dp4 r5.x, c8, r1
					    dp4 r5.y, c9, r1
					    dp4 r5.z, c10, r1
					    dp4 r5.w, c11, r1
					    mad o1.xy, v2, c20, c20.zwzw
					    mad o5.zw, v3.xyxy, c19.xyxy, c19
					    mul r0.xyz, c13, v1.y
					    mad r0.xyz, v1.x, c12, r0
					    mad r0.xyz, v1.z, c14, r0
					    nrm r1.xyz, r0
					    dp4 r0.y, c5, v0
					    add r2, -r0.y, c16
					    mul r3, r1.y, r2
					    mul r2, r2, r2
					    dp4 r0.x, c4, v0
					    add r4, -r0.x, c15
					    mad r3, r4, r1.x, r3
					    mad r2, r4, r4, r2
					    dp4 r0.z, c6, v0
					    add r4, -r0.z, c17
					    mov o3.xyz, r0
					    mad r0, r4, r1.z, r3
					    mov o2.xyz, r1
					    mad r1, r4, r4, r2
					    max r1, r1, c21.z
					    rsq r2.x, r1.x
					    rsq r2.y, r1.y
					    rsq r2.z, r1.z
					    rsq r2.w, r1.w
					    mov r3.x, c21.x
					    mad r1, r1, c18, r3.x
					    mul r0, r0, r2
					    max r0, r0, c21.y
					    rcp r2.x, r1.x
					    rcp r2.y, r1.y
					    rcp r2.z, r1.z
					    rcp r2.w, r1.w
					    mul r0, r0, r2
					    mul r1.xyz, r0.y, c1
					    mad r1.xyz, c0, r0.x, r1
					    mad r0.xyz, c2, r0.z, r1
					    mad o4.xyz, c3, r0.w, r0
					    mov o5.xy, c21.y
					    mad o0.xy, r5.w, c255, r5
					    mov o0.zw, r5
					
					// approximately 52 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[2];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[40];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[3];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unused_4_0;
						vec4 unity_DynamicLightmapST;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD2;
					out vec2 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat15;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat15 = inversesqrt(u_xlat15);
					    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    vs_TEXCOORD2.xyz = u_xlat0.xyz;
					    u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat2;
					    u_xlat2 = u_xlat2 * u_xlat2;
					    u_xlat4 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat1 = u_xlat0 * u_xlat1.zzzz + u_xlat3;
					    u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat2;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat2 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat2;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD3.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    vs_TEXCOORD5.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
					    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_FogParams;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   float4 unity_SHAb;
					//   float4 unity_SHAg;
					//   float4 unity_SHAr;
					//   float4 unity_SHBb;
					//   float4 unity_SHBg;
					//   float4 unity_SHBr;
					//   float4 unity_SHC;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//   unity_SHAr          c11      1
					//   unity_SHAg          c12      1
					//   unity_SHAb          c13      1
					//   unity_SHBr          c14      1
					//   unity_SHBg          c15      1
					//   unity_SHBb          c16      1
					//   unity_SHC           c17      1
					//   unity_FogParams     c18      1
					//   _MainTex_ST         c19      1
					//
					
					    vs_3_0
					    def c20, 1.05499995, -0.0549999997, 0, 0
					    def c21, 1, 0, 0.416666657, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4.xyz
					    dcl_texcoord4 o5.x
					    mad r0, v0.xyzx, c21.xxxy, c21.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r4.x, c4, r1
					    dp4 r4.y, c5, r1
					    dp4 r4.w, c7, r1
					    dp4 r0.x, c6, r1
					    mad o1.xy, v2, c19, c19.zwzw
					    dp4 o3.x, c0, v0
					    dp4 o3.y, c1, v0
					    dp4 o3.z, c2, v0
					    mul r0.yzw, c9.xxyz, v1.y
					    mad r0.yzw, v1.x, c8.xxyz, r0
					    mad r0.yzw, v1.z, c10.xxyz, r0
					    nrm r1.xyz, r0.yzww
					    mul r0.y, r1.y, r1.y
					    mad r0.y, r1.x, r1.x, -r0.y
					    mul r2, r1.yzzx, r1.xyzz
					    dp4 r3.x, c14, r2
					    dp4 r3.y, c15, r2
					    dp4 r3.z, c16, r2
					    mad r0.yzw, c17.xxyz, r0.y, r3.xxyz
					    mov r1.w, c21.x
					    dp4 r2.x, c11, r1
					    dp4 r2.y, c12, r1
					    dp4 r2.z, c13, r1
					    mov o2.xyz, r1
					    add r0.yzw, r0, r2.xxyz
					    max r0.yzw, r0, c21.y
					    log r1.x, r0.y
					    log r1.y, r0.z
					    log r1.z, r0.w
					    mul r0.yzw, r1.xxyz, c21.z
					    exp r1.x, r0.y
					    exp r1.y, r0.z
					    exp r1.z, r0.w
					    mad r0.yzw, r1.xxyz, c20.x, c20.y
					    max o4.xyz, r0.yzww, c21.y
					    mad o5.x, r0.x, c18.z, c18.w
					    mov r4.z, r0.x
					    mad o0.xy, r4.w, c255, r4
					    mov o0.zw, r4
					
					// approximately 46 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_2_0[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_8[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_3_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_4_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_4_2[3];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_5_0;
						vec4 unity_FogParams;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					out float vs_TEXCOORD4;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat12;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD2.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    u_xlat0 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z / _ProjectionParams.y;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat0.x * _ProjectionParams.z;
					    u_xlat0.x = max(u_xlat0.x, 0.0);
					    vs_TEXCOORD4 = u_xlat0.x * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat12 = inversesqrt(u_xlat12);
					    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = u_xlat0.xyz;
					    u_xlat1.x = u_xlat0.y * u_xlat0.y;
					    u_xlat1.x = u_xlat0.x * u_xlat0.x + (-u_xlat1.x);
					    u_xlat2 = u_xlat0.yzzx * u_xlat0.xyzz;
					    u_xlat3.x = dot(unity_SHBr, u_xlat2);
					    u_xlat3.y = dot(unity_SHBg, u_xlat2);
					    u_xlat3.z = dot(unity_SHBb, u_xlat2);
					    u_xlat1.xyz = unity_SHC.xyz * u_xlat1.xxx + u_xlat3.xyz;
					    u_xlat0.w = 1.0;
					    u_xlat2.x = dot(unity_SHAr, u_xlat0);
					    u_xlat2.y = dot(unity_SHAg, u_xlat0);
					    u_xlat2.z = dot(unity_SHAb, u_xlat0);
					    u_xlat0.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat0.xyz = log2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    vs_TEXCOORD3.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_DynamicLightmapST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                    Reg   Size
					//   ----------------------- ----- ----
					//   unity_ObjectToWorld     c0       4
					//   unity_MatrixVP          c4       4
					//   unity_WorldToObject     c8       3
					//   unity_DynamicLightmapST c11      1
					//   _MainTex_ST             c12      1
					//
					
					    vs_3_0
					    def c13, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_texcoord2 v3
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4.xyz
					    dcl_texcoord4 o5.x
					    dcl_texcoord5 o6
					    mad r0, v0.xyzx, c13.xxxy, c13.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.w, c7, r1
					    dp4 r0.x, c6, r1
					    mad o1.xy, v2, c12, c12.zwzw
					    dp4 o3.x, c0, v0
					    dp4 o3.y, c1, v0
					    dp4 o3.z, c2, v0
					    mul r0.yzw, c9.xxyz, v1.y
					    mad r0.yzw, v1.x, c8.xxyz, r0
					    mad r0.yzw, v1.z, c10.xxyz, r0
					    dp3 r1.x, r0.yzww, r0.yzww
					    rsq r1.x, r1.x
					    mul o2.xyz, r0.yzww, r1.x
					    mad o6.zw, v3.xyxy, c11.xyxy, c11
					    mov r2.z, r0.x
					    mov o5.x, r0.x
					    mov o4.xyz, c13.y
					    mov o6.xy, c13.y
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 26 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[3];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unused_3_0;
						vec4 unity_DynamicLightmapST;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD2;
					out vec2 vs_TEXCOORD0;
					out float vs_TEXCOORD4;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD2.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    u_xlat0 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    vs_TEXCOORD4 = u_xlat0.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    vs_TEXCOORD3.xyz = vec3(0.0, 0.0, 0.0);
					    vs_TEXCOORD5.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
					    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_FogParams;
					//   float4 unity_LightmapST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//   unity_FogParams     c11      1
					//   unity_LightmapST    c12      1
					//   _MainTex_ST         c13      1
					//
					
					    vs_3_0
					    def c14, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_texcoord1 v3
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4
					    dcl_texcoord4 o5.x
					    mad r0, v0.xyzx, c14.xxxy, c14.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.w, c7, r1
					    dp4 r0.x, c6, r1
					    mad o1.xy, v2, c13, c13.zwzw
					    dp4 o3.x, c0, v0
					    dp4 o3.y, c1, v0
					    dp4 o3.z, c2, v0
					    mul r0.yzw, c9.xxyz, v1.y
					    mad r0.yzw, v1.x, c8.xxyz, r0
					    mad r0.yzw, v1.z, c10.xxyz, r0
					    dp3 r1.x, r0.yzww, r0.yzww
					    rsq r1.x, r1.x
					    mul o2.xyz, r0.yzww, r1.x
					    mad o4.xy, v3, c12, c12.zwzw
					    mad o5.x, r0.x, c11.z, c11.w
					    mov r2.z, r0.x
					    mov o4.zw, c14.y
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 25 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[3];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_4_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_5_1;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec2 vs_TEXCOORD0;
					out float vs_TEXCOORD4;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD2.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    u_xlat0 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat0.x = u_xlat0.z / _ProjectionParams.y;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat0.x * _ProjectionParams.z;
					    u_xlat0.x = max(u_xlat0.x, 0.0);
					    vs_TEXCOORD4 = u_xlat0.x * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_DynamicLightmapST;
					//   float4 unity_LightmapST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                    Reg   Size
					//   ----------------------- ----- ----
					//   unity_ObjectToWorld     c0       4
					//   unity_MatrixVP          c4       4
					//   unity_WorldToObject     c8       3
					//   unity_LightmapST        c11      1
					//   unity_DynamicLightmapST c12      1
					//   _MainTex_ST             c13      1
					//
					
					    vs_3_0
					    def c14, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_texcoord1 v3
					    dcl_texcoord2 v4
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4
					    dcl_texcoord4 o5.x
					    mad r0, v0.xyzx, c14.xxxy, c14.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.w, c7, r1
					    dp4 r0.x, c6, r1
					    mad o1.xy, v2, c13, c13.zwzw
					    dp4 o3.x, c0, v0
					    dp4 o3.y, c1, v0
					    dp4 o3.z, c2, v0
					    mul r0.yzw, c9.xxyz, v1.y
					    mad r0.yzw, v1.x, c8.xxyz, r0
					    mad r0.yzw, v1.z, c10.xxyz, r0
					    dp3 r1.x, r0.yzww, r0.yzww
					    rsq r1.x, r1.x
					    mul o2.xyz, r0.yzww, r1.x
					    mad o4.zw, v4.xyxy, c12.xyxy, c12
					    mad o4.xy, v3, c11, c11.zwzw
					    mov r2.z, r0.x
					    mov o5.x, r0.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 25 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[3];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unity_DynamicLightmapST;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					in  vec4 in_TEXCOORD2;
					out vec2 vs_TEXCOORD0;
					out float vs_TEXCOORD4;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD2.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    u_xlat0 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    vs_TEXCOORD4 = u_xlat0.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
					    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_4LightAtten0;
					//   float4 unity_4LightPosX0;
					//   float4 unity_4LightPosY0;
					//   float4 unity_4LightPosZ0;
					//   float4 unity_FogParams;
					//   float4 unity_LightColor[8];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   float4 unity_SHAb;
					//   float4 unity_SHAg;
					//   float4 unity_SHAr;
					//   float4 unity_SHBb;
					//   float4 unity_SHBg;
					//   float4 unity_SHBr;
					//   float4 unity_SHC;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_LightColor    c0       4
					//   unity_ObjectToWorld c4       4
					//   unity_MatrixVP      c8       4
					//   unity_WorldToObject c12      3
					//   unity_4LightPosX0   c15      1
					//   unity_4LightPosY0   c16      1
					//   unity_4LightPosZ0   c17      1
					//   unity_4LightAtten0  c18      1
					//   unity_SHAr          c19      1
					//   unity_SHAg          c20      1
					//   unity_SHAb          c21      1
					//   unity_SHBr          c22      1
					//   unity_SHBg          c23      1
					//   unity_SHBb          c24      1
					//   unity_SHC           c25      1
					//   unity_FogParams     c26      1
					//   _MainTex_ST         c27      1
					//
					
					    vs_3_0
					    def c28, 1.05499995, -0.0549999997, 0, 0
					    def c29, 1, 0, 0.416666657, 9.99999997e-007
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4.xyz
					    dcl_texcoord4 o5.x
					    mad r0, v0.xyzx, c29.xxxy, c29.yyyx
					    dp4 r1.x, c4, r0
					    dp4 r1.y, c5, r0
					    dp4 r1.z, c6, r0
					    dp4 r1.w, c7, r0
					    dp4 r6.x, c8, r1
					    dp4 r6.y, c9, r1
					    dp4 r6.w, c11, r1
					    dp4 r0.x, c10, r1
					    mad o1.xy, v2, c27, c27.zwzw
					    mul r0.yzw, c13.xxyz, v1.y
					    mad r0.yzw, v1.x, c12.xxyz, r0
					    mad r0.yzw, v1.z, c14.xxyz, r0
					    nrm r1.xyz, r0.yzww
					    mul r0.y, r1.y, r1.y
					    mad r0.y, r1.x, r1.x, -r0.y
					    mul r2, r1.yzzx, r1.xyzz
					    dp4 r3.x, c22, r2
					    dp4 r3.y, c23, r2
					    dp4 r3.z, c24, r2
					    mad r0.yzw, c25.xxyz, r0.y, r3.xxyz
					    mov r1.w, c29.x
					    dp4 r2.x, c19, r1
					    dp4 r2.y, c20, r1
					    dp4 r2.z, c21, r1
					    add r0.yzw, r0, r2.xxyz
					    max r0.yzw, r0, c29.y
					    log r2.x, r0.y
					    log r2.y, r0.z
					    log r2.z, r0.w
					    mul r0.yzw, r2.xxyz, c29.z
					    exp r2.x, r0.y
					    exp r2.y, r0.z
					    exp r2.z, r0.w
					    mad r0.yzw, r2.xxyz, c28.x, c28.y
					    max r0.yzw, r0, c29.y
					    dp4 r2.y, c5, v0
					    add r3, -r2.y, c16
					    mul r4, r1.y, r3
					    mul r3, r3, r3
					    dp4 r2.x, c4, v0
					    add r5, -r2.x, c15
					    mad r4, r5, r1.x, r4
					    mad r3, r5, r5, r3
					    dp4 r2.z, c6, v0
					    add r5, -r2.z, c17
					    mov o3.xyz, r2
					    mad r2, r5, r1.z, r4
					    mov o2.xyz, r1
					    mad r1, r5, r5, r3
					    max r1, r1, c29.w
					    rsq r3.x, r1.x
					    rsq r3.y, r1.y
					    rsq r3.z, r1.z
					    rsq r3.w, r1.w
					    mov r4.x, c29.x
					    mad r1, r1, c18, r4.x
					    mul r2, r2, r3
					    max r2, r2, c29.y
					    rcp r3.x, r1.x
					    rcp r3.y, r1.y
					    rcp r3.z, r1.z
					    rcp r3.w, r1.w
					    mul r1, r2, r3
					    mul r2.xyz, r1.y, c1
					    mad r2.xyz, c0, r1.x, r2
					    mad r1.xyz, c2, r1.z, r2
					    mad r1.xyz, c3, r1.w, r1
					    add o4.xyz, r0.yzww, r1
					    mad o5.x, r0.x, c26.z, c26.w
					    mov r6.z, r0.x
					    mad o0.xy, r6.w, c255, r6
					    mov o0.zw, r6
					
					// approximately 75 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_2_0[2];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_2_6[31];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_14[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_3_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_4_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_4_2[3];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_5_0;
						vec4 unity_FogParams;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					out float vs_TEXCOORD4;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					float u_xlat18;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    u_xlat18 = u_xlat1.z / _ProjectionParams.y;
					    u_xlat18 = (-u_xlat18) + 1.0;
					    u_xlat18 = u_xlat18 * _ProjectionParams.z;
					    u_xlat18 = max(u_xlat18, 0.0);
					    vs_TEXCOORD4 = u_xlat18 * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat18 = inversesqrt(u_xlat18);
					    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    vs_TEXCOORD2.xyz = u_xlat0.xyz;
					    u_xlat18 = u_xlat1.y * u_xlat1.y;
					    u_xlat18 = u_xlat1.x * u_xlat1.x + (-u_xlat18);
					    u_xlat2 = u_xlat1.yzzx * u_xlat1.xyzz;
					    u_xlat3.x = dot(unity_SHBr, u_xlat2);
					    u_xlat3.y = dot(unity_SHBg, u_xlat2);
					    u_xlat3.z = dot(unity_SHBb, u_xlat2);
					    u_xlat2.xyz = unity_SHC.xyz * vec3(u_xlat18) + u_xlat3.xyz;
					    u_xlat1.w = 1.0;
					    u_xlat3.x = dot(unity_SHAr, u_xlat1);
					    u_xlat3.y = dot(unity_SHAg, u_xlat1);
					    u_xlat3.z = dot(unity_SHAb, u_xlat1);
					    u_xlat2.xyz = u_xlat2.xyz + u_xlat3.xyz;
					    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat2.xyz = log2(u_xlat2.xyz);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
					    u_xlat2.xyz = exp2(u_xlat2.xyz);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
					    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat4 = u_xlat1.yyyy * u_xlat3;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat4 = u_xlat5 * u_xlat1.xxxx + u_xlat4;
					    u_xlat1 = u_xlat0 * u_xlat1.zzzz + u_xlat4;
					    u_xlat3 = u_xlat5 * u_xlat5 + u_xlat3;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat3;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    vs_TEXCOORD3.xyz = u_xlat0.xyz + u_xlat2.xyz;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_4LightAtten0;
					//   float4 unity_4LightPosX0;
					//   float4 unity_4LightPosY0;
					//   float4 unity_4LightPosZ0;
					//   float4 unity_DynamicLightmapST;
					//   float4 unity_LightColor[8];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                    Reg   Size
					//   ----------------------- ----- ----
					//   unity_LightColor        c0       4
					//   unity_ObjectToWorld     c4       4
					//   unity_MatrixVP          c8       4
					//   unity_WorldToObject     c12      3
					//   unity_4LightPosX0       c15      1
					//   unity_4LightPosY0       c16      1
					//   unity_4LightPosZ0       c17      1
					//   unity_4LightAtten0      c18      1
					//   unity_DynamicLightmapST c19      1
					//   _MainTex_ST             c20      1
					//
					
					    vs_3_0
					    def c21, 1, 0, 9.99999997e-007, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dcl_texcoord2 v3
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    dcl_texcoord3 o4.xyz
					    dcl_texcoord4 o5.x
					    dcl_texcoord5 o6
					    mad r0, v0.xyzx, c21.xxxy, c21.yyyx
					    dp4 r1.x, c4, r0
					    dp4 r1.y, c5, r0
					    dp4 r1.z, c6, r0
					    dp4 r1.w, c7, r0
					    dp4 r6.x, c8, r1
					    dp4 r6.y, c9, r1
					    dp4 r6.w, c11, r1
					    dp4 r0.x, c10, r1
					    mad o1.xy, v2, c20, c20.zwzw
					    mad o6.zw, v3.xyxy, c19.xyxy, c19
					    mul r0.yzw, c13.xxyz, v1.y
					    mad r0.yzw, v1.x, c12.xxyz, r0
					    mad r0.yzw, v1.z, c14.xxyz, r0
					    nrm r1.xyz, r0.yzww
					    dp4 r2.y, c5, v0
					    add r3, -r2.y, c16
					    mul r4, r1.y, r3
					    mul r3, r3, r3
					    dp4 r2.x, c4, v0
					    add r5, -r2.x, c15
					    mad r4, r5, r1.x, r4
					    mad r3, r5, r5, r3
					    dp4 r2.z, c6, v0
					    add r5, -r2.z, c17
					    mov o3.xyz, r2
					    mad r2, r5, r1.z, r4
					    mov o2.xyz, r1
					    mad r1, r5, r5, r3
					    max r1, r1, c21.z
					    rsq r3.x, r1.x
					    rsq r3.y, r1.y
					    rsq r3.z, r1.z
					    rsq r3.w, r1.w
					    mov r4.x, c21.x
					    mad r1, r1, c18, r4.x
					    mul r2, r2, r3
					    max r2, r2, c21.y
					    rcp r3.x, r1.x
					    rcp r3.y, r1.y
					    rcp r3.z, r1.z
					    rcp r3.w, r1.w
					    mul r1, r2, r3
					    mul r0.yzw, r1.y, c1.xxyz
					    mad r0.yzw, c0.xxyz, r1.x, r0
					    mad r0.yzw, c2.xxyz, r1.z, r0
					    mad o4.xyz, c3, r1.w, r0.yzww
					    mov r6.z, r0.x
					    mov o5.x, r0.x
					    mov o6.xy, c21.y
					    mad o0.xy, r6.w, c255, r6
					    mov o0.zw, r6
					
					// approximately 54 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[8];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[2];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[40];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[3];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unused_4_0;
						vec4 unity_DynamicLightmapST;
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD2;
					out vec2 vs_TEXCOORD0;
					out float vs_TEXCOORD4;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat15;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD4 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat15 = inversesqrt(u_xlat15);
					    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = u_xlat1.xyz;
					    vs_TEXCOORD2.xyz = u_xlat0.xyz;
					    u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat3 = u_xlat1.yyyy * u_xlat2;
					    u_xlat2 = u_xlat2 * u_xlat2;
					    u_xlat4 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;
					    u_xlat1 = u_xlat0 * u_xlat1.zzzz + u_xlat3;
					    u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat2;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat2 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat2;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD3.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    vs_TEXCOORD5.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
					    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _Time        c0       1
					//   _Color       c1       1
					//   _Alpha       c2       1
					//   _SpeedX      c3       1
					//   _SpeedY      c4       1
					//   _Scale       c5       1
					//   _TileX       c6       1
					//   _TileY       c7       1
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    def c8, 0.159154937, 0.5, 6.28318548, -3.14159274
					    def c9, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_texcoord3_pp v1.xyz
					    dcl_2d s0
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c3.x
					    mad r0.x, r0.x, c6.x, r0.z
					    mad r0.x, r0.x, c8.x, c8.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c8.z, c8.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c5.x, v0.x
					    mul r0.y, r0.y, c4.x
					    mad r0.y, v0.y, c7.x, r0.y
					    mad r0.y, r0.y, c8.x, c8.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c8.z, c8.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c5.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s0
					    mul r0.xyz, r0, c1
					    mul_pp r1, r0, c2.x
					    mul_pp r0.xyz, r1, v1
					    mov_pp r0.w, c9.x
					    add_pp oC0, r1, r0
					
					// approximately 37 instruction slots used (1 texture, 36 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[5];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						vec4 unused_0_8;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec2 u_xlat2;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat2.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat0.x = u_xlat0.x * _TileX + u_xlat2.x;
					    u_xlat2.x = vs_TEXCOORD0.y * _TileY + u_xlat2.y;
					    u_xlat2.x = cos(u_xlat2.x);
					    u_xlat0.x = sin(u_xlat0.x);
					    u_xlat0.x = u_xlat0.x * _Scale + vs_TEXCOORD0.x;
					    u_xlat0.x = u_xlat2.x * _Scale + u_xlat0.x;
					    u_xlat0.y = vs_TEXCOORD0.y;
					    u_xlat0 = texture(_MainTex, u_xlat0.xy);
					    u_xlat0.xyz = u_xlat0.xyz * _Color.xyz;
					    u_xlat1 = u_xlat0 * vec4(_Alpha);
					    u_xlat0.xyz = u_xlat1.xyz * vs_TEXCOORD3.xyz;
					    u_xlat0.w = 0.0;
					    SV_Target0 = u_xlat1 + u_xlat0;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//   sampler2D unity_DynamicLightmap;
					//   float4 unity_DynamicLightmap_HDR;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _Time                     c0       1
					//   unity_DynamicLightmap_HDR c1       1
					//   _Color                    c2       1
					//   _Alpha                    c3       1
					//   _SpeedX                   c4       1
					//   _SpeedY                   c5       1
					//   _Scale                    c6       1
					//   _TileX                    c7       1
					//   _TileY                    c8       1
					//   unity_DynamicLightmap     s0       1
					//   _MainTex                  s1       1
					//
					
					    ps_3_0
					    def c9, 0.159154937, 0.5, 6.28318548, -3.14159274
					    def c10, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_texcoord3_pp v1.xyz
					    dcl_texcoord5 v2.zw
					    dcl_2d s0
					    dcl_2d s1
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c4.x
					    mad r0.x, r0.x, c7.x, r0.z
					    mad r0.x, r0.x, c9.x, c9.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c9.z, c9.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c6.x, v0.x
					    mul r0.y, r0.y, c5.x
					    mad r0.y, v0.y, c8.x, r0.y
					    mad r0.y, r0.y, c9.x, c9.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c9.z, c9.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c6.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s1
					    mul r0.xyz, r0, c2
					    mul_pp r1, r0, c3.x
					    mul_pp r0.xyz, r1, v1
					    mov_pp r0.w, c10.x
					    add_pp r0, r1, r0
					    texld_pp r2, v2.zwzw, s0
					    mul_pp r1.w, r2.w, c1.x
					    mul_pp r2.xyz, r2, r1.w
					    log_pp r3.x, r2.x
					    log_pp r3.y, r2.y
					    log_pp r3.z, r2.z
					    mul_pp r2.xyz, r3, c1.y
					    exp_pp r3.x, r2.x
					    exp_pp r3.y, r2.y
					    exp_pp r3.z, r2.z
					    mad_pp oC0.xyz, r1, r3, r0
					    mov_pp oC0.w, r0.w
					
					// approximately 49 instruction slots used (2 texture, 47 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0;
						vec4 unity_DynamicLightmap_HDR;
						vec4 unused_0_2[3];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						vec4 unused_0_10;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D unity_DynamicLightmap;
					in  vec2 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat10_0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					float u_xlat9;
					void main()
					{
					    u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
					    u_xlat9 = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
					    u_xlat0.xyz = u_xlat10_0.xyz * vec3(u_xlat9);
					    u_xlat0.xyz = log2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * unity_DynamicLightmap_HDR.yyy;
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat9 = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat1.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat9 = u_xlat9 * _TileX + u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * _TileY + u_xlat1.y;
					    u_xlat1.x = cos(u_xlat1.x);
					    u_xlat9 = sin(u_xlat9);
					    u_xlat9 = u_xlat9 * _Scale + vs_TEXCOORD0.x;
					    u_xlat1.x = u_xlat1.x * _Scale + u_xlat9;
					    u_xlat1.y = vs_TEXCOORD0.y;
					    u_xlat1 = texture(_MainTex, u_xlat1.xy);
					    u_xlat1.xyz = u_xlat1.xyz * _Color.xyz;
					    u_xlat2 = u_xlat1 * vec4(_Alpha);
					    u_xlat1.xyz = u_xlat2.xyz * vs_TEXCOORD3.xyz;
					    u_xlat1.w = 0.0;
					    u_xlat1 = u_xlat2 + u_xlat1;
					    SV_Target0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//   sampler2D unity_Lightmap;
					//   float4 unity_Lightmap_HDR;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _Time              c0       1
					//   unity_Lightmap_HDR c1       1
					//   _Color             c2       1
					//   _Alpha             c3       1
					//   _SpeedX            c4       1
					//   _SpeedY            c5       1
					//   _Scale             c6       1
					//   _TileX             c7       1
					//   _TileY             c8       1
					//   unity_Lightmap     s0       1
					//   _MainTex           s1       1
					//
					
					    ps_3_0
					    def c9, 0.159154937, 0.5, 6.28318548, -3.14159274
					    dcl_texcoord v0.xy
					    dcl_texcoord3 v1.xy
					    dcl_2d s0
					    dcl_2d s1
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c4.x
					    mad r0.x, r0.x, c7.x, r0.z
					    mad r0.x, r0.x, c9.x, c9.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c9.z, c9.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c6.x, v0.x
					    mul r0.y, r0.y, c5.x
					    mad r0.y, v0.y, c8.x, r0.y
					    mad r0.y, r0.y, c9.x, c9.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c9.z, c9.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c6.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s1
					    mul_pp oC0.w, r0.w, c3.x
					    mul r0.xyz, r0, c2
					    mul_pp r0.xyz, r0, c3.x
					    texld_pp r1, v1, s0
					    mul_pp r0.w, r1.w, c1.x
					    mul_pp r1.xyz, r1, r0.w
					    mul_pp oC0.xyz, r0, r1
					
					// approximately 39 instruction slots used (2 texture, 37 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[4];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						vec4 unused_0_9;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D unity_Lightmap;
					in  vec2 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat10_0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec2 u_xlat2;
					float u_xlat6;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat2.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat0.x = u_xlat0.x * _TileX + u_xlat2.x;
					    u_xlat2.x = vs_TEXCOORD0.y * _TileY + u_xlat2.y;
					    u_xlat2.x = cos(u_xlat2.x);
					    u_xlat0.x = sin(u_xlat0.x);
					    u_xlat0.x = u_xlat0.x * _Scale + vs_TEXCOORD0.x;
					    u_xlat0.x = u_xlat2.x * _Scale + u_xlat0.x;
					    u_xlat0.y = vs_TEXCOORD0.y;
					    u_xlat10_0 = texture(_MainTex, u_xlat0.xy);
					    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;
					    SV_Target0.w = u_xlat10_0.w * _Alpha;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(_Alpha);
					    u_xlat10_1 = texture(unity_Lightmap, vs_TEXCOORD3.xy);
					    u_xlat6 = u_xlat10_1.w * unity_Lightmap_HDR.x;
					    u_xlat1.xyz = u_xlat10_1.xyz * vec3(u_xlat6);
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" }
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//   sampler2D unity_DynamicLightmap;
					//   float4 unity_DynamicLightmap_HDR;
					//   sampler2D unity_Lightmap;
					//   float4 unity_Lightmap_HDR;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _Time                     c0       1
					//   unity_Lightmap_HDR        c1       1
					//   unity_DynamicLightmap_HDR c2       1
					//   _Color                    c3       1
					//   _Alpha                    c4       1
					//   _SpeedX                   c5       1
					//   _SpeedY                   c6       1
					//   _Scale                    c7       1
					//   _TileX                    c8       1
					//   _TileY                    c9       1
					//   unity_Lightmap            s0       1
					//   unity_DynamicLightmap     s1       1
					//   _MainTex                  s2       1
					//
					
					    ps_3_0
					    def c10, 0.159154937, 0.5, 6.28318548, -3.14159274
					    dcl_texcoord v0.xy
					    dcl_texcoord3 v1
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c5.x
					    mad r0.x, r0.x, c8.x, r0.z
					    mad r0.x, r0.x, c10.x, c10.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c10.z, c10.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c7.x, v0.x
					    mul r0.y, r0.y, c6.x
					    mad r0.y, v0.y, c9.x, r0.y
					    mad r0.y, r0.y, c10.x, c10.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c10.z, c10.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c7.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s2
					    mul_pp oC0.w, r0.w, c4.x
					    mul r0.xyz, r0, c3
					    mul_pp r0.xyz, r0, c4.x
					    texld_pp r1, v1.zwzw, s1
					    mul_pp r0.w, r1.w, c2.x
					    mul_pp r1.xyz, r1, r0.w
					    log_pp r2.x, r1.x
					    log_pp r2.y, r1.y
					    log_pp r2.z, r1.z
					    mul_pp r1.xyz, r2, c2.y
					    exp_pp r2.x, r1.x
					    exp_pp r2.y, r1.y
					    exp_pp r2.z, r1.z
					    mul_pp r1.xyz, r0, r2
					    texld_pp r2, v1, s0
					    mul_pp r0.w, r2.w, c1.x
					    mul_pp r2.xyz, r2, r0.w
					    mad_pp oC0.xyz, r0, r2, r1
					
					// approximately 50 instruction slots used (3 texture, 47 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" }
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unity_DynamicLightmap_HDR;
						vec4 unused_0_2[3];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						vec4 unused_0_10;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D unity_Lightmap;
					uniform  sampler2D unity_DynamicLightmap;
					in  vec2 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat10_0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec4 u_xlat10_2;
					float u_xlat9;
					void main()
					{
					    u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
					    u_xlat9 = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
					    u_xlat0.xyz = u_xlat10_0.xyz * vec3(u_xlat9);
					    u_xlat0.xyz = log2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * unity_DynamicLightmap_HDR.yyy;
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat9 = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat1.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat9 = u_xlat9 * _TileX + u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * _TileY + u_xlat1.y;
					    u_xlat1.x = cos(u_xlat1.x);
					    u_xlat9 = sin(u_xlat9);
					    u_xlat9 = u_xlat9 * _Scale + vs_TEXCOORD0.x;
					    u_xlat1.x = u_xlat1.x * _Scale + u_xlat9;
					    u_xlat1.y = vs_TEXCOORD0.y;
					    u_xlat10_1 = texture(_MainTex, u_xlat1.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    SV_Target0.w = u_xlat10_1.w * _Alpha;
					    u_xlat1.xyz = u_xlat1.xyz * vec3(_Alpha);
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2 = texture(unity_Lightmap, vs_TEXCOORD3.xy);
					    u_xlat9 = u_xlat10_2.w * unity_Lightmap_HDR.x;
					    u_xlat2.xyz = u_xlat10_2.xyz * vec3(u_xlat9);
					    SV_Target0.xyz = u_xlat1.xyz * u_xlat2.xyz + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//   float4 unity_FogColor;
					//
					//
					// Registers:
					//
					//   Name           Reg   Size
					//   -------------- ----- ----
					//   _Time          c0       1
					//   unity_FogColor c1       1
					//   _Color         c2       1
					//   _Alpha         c3       1
					//   _SpeedX        c4       1
					//   _SpeedY        c5       1
					//   _Scale         c6       1
					//   _TileX         c7       1
					//   _TileY         c8       1
					//   _MainTex       s0       1
					//
					
					    ps_3_0
					    def c9, 0.159154937, 0.5, 6.28318548, -3.14159274
					    def c10, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_texcoord3_pp v1.xyz
					    dcl_texcoord4 v2.x
					    dcl_2d s0
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c4.x
					    mad r0.x, r0.x, c7.x, r0.z
					    mad r0.x, r0.x, c9.x, c9.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c9.z, c9.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c6.x, v0.x
					    mul r0.y, r0.y, c5.x
					    mad r0.y, v0.y, c8.x, r0.y
					    mad r0.y, r0.y, c9.x, c9.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c9.z, c9.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c6.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s0
					    mul r0.xyz, r0, c2
					    mul_pp r1, r0, c3.x
					    mul_pp r0.xyz, r1, v1
					    mov_pp r0.w, c10.x
					    add_pp r0, r1, r0
					    add r0.xyz, r0, -c1
					    mov_pp oC0.w, r0.w
					    mov_sat r0.w, v2.x
					    mad_pp oC0.xyz, r0.w, r0, c1
					
					// approximately 41 instruction slots used (1 texture, 40 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[5];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						vec4 unused_0_8;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unused_2_1;
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					in  float vs_TEXCOORD4;
					in  vec3 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec2 u_xlat2;
					float u_xlat6;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat2.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat0.x = u_xlat0.x * _TileX + u_xlat2.x;
					    u_xlat2.x = vs_TEXCOORD0.y * _TileY + u_xlat2.y;
					    u_xlat2.x = cos(u_xlat2.x);
					    u_xlat0.x = sin(u_xlat0.x);
					    u_xlat0.x = u_xlat0.x * _Scale + vs_TEXCOORD0.x;
					    u_xlat0.x = u_xlat2.x * _Scale + u_xlat0.x;
					    u_xlat0.y = vs_TEXCOORD0.y;
					    u_xlat0 = texture(_MainTex, u_xlat0.xy);
					    u_xlat0.xyz = u_xlat0.xyz * _Color.xyz;
					    u_xlat1 = u_xlat0 * vec4(_Alpha);
					    u_xlat0.xyz = u_xlat1.xyz * vs_TEXCOORD3.xyz;
					    u_xlat0.w = 0.0;
					    u_xlat0 = u_xlat1 + u_xlat0;
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.w = u_xlat0.w;
					    u_xlat6 = vs_TEXCOORD4;
					    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
					    SV_Target0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//   sampler2D unity_DynamicLightmap;
					//   float4 unity_DynamicLightmap_HDR;
					//   float4 unity_FogColor;
					//   float4 unity_FogParams;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _Time                     c0       1
					//   unity_FogColor            c1       1
					//   unity_FogParams           c2       1
					//   unity_DynamicLightmap_HDR c3       1
					//   _Color                    c4       1
					//   _Alpha                    c5       1
					//   _SpeedX                   c6       1
					//   _SpeedY                   c7       1
					//   _Scale                    c8       1
					//   _TileX                    c9       1
					//   _TileY                    c10      1
					//   unity_DynamicLightmap     s0       1
					//   _MainTex                  s1       1
					//
					
					    ps_3_0
					    def c11, 0.159154937, 0.5, 6.28318548, -3.14159274
					    def c12, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_texcoord3_pp v1.xyz
					    dcl_texcoord4 v2.x
					    dcl_texcoord5 v3.zw
					    dcl_2d s0
					    dcl_2d s1
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c6.x
					    mad r0.x, r0.x, c9.x, r0.z
					    mad r0.x, r0.x, c11.x, c11.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c11.z, c11.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c8.x, v0.x
					    mul r0.y, r0.y, c7.x
					    mad r0.y, v0.y, c10.x, r0.y
					    mad r0.y, r0.y, c11.x, c11.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c11.z, c11.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c8.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s1
					    mul r0.xyz, r0, c4
					    mul_pp r1, r0, c5.x
					    mul_pp r0.xyz, r1, v1
					    mov_pp r0.w, c12.x
					    add_pp r0, r1, r0
					    texld_pp r2, v3.zwzw, s0
					    mul_pp r1.w, r2.w, c3.x
					    mul_pp r2.xyz, r2, r1.w
					    log_pp r3.x, r2.x
					    log_pp r3.y, r2.y
					    log_pp r3.z, r2.z
					    mul_pp r2.xyz, r3, c3.y
					    exp_pp r3.x, r2.x
					    exp_pp r3.y, r2.y
					    exp_pp r3.z, r2.z
					    mad_pp r0.xyz, r1, r3, r0
					    mov_pp oC0.w, r0.w
					    add r0.xyz, r0, -c1
					    mad_sat r0.w, v2.x, c2.z, c2.w
					    mad_pp oC0.xyz, r0.w, r0, c1
					
					// approximately 52 instruction slots used (2 texture, 50 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0;
						vec4 unity_DynamicLightmap_HDR;
						vec4 unused_0_2[3];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						vec4 unused_0_10;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[4];
						vec4 _ProjectionParams;
						vec4 unused_1_3[3];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D unity_DynamicLightmap;
					in  vec2 vs_TEXCOORD0;
					in  float vs_TEXCOORD4;
					in  vec3 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat10_0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					float u_xlat9;
					void main()
					{
					    u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
					    u_xlat9 = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
					    u_xlat0.xyz = u_xlat10_0.xyz * vec3(u_xlat9);
					    u_xlat0.xyz = log2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * unity_DynamicLightmap_HDR.yyy;
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat9 = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat1.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat9 = u_xlat9 * _TileX + u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * _TileY + u_xlat1.y;
					    u_xlat1.x = cos(u_xlat1.x);
					    u_xlat9 = sin(u_xlat9);
					    u_xlat9 = u_xlat9 * _Scale + vs_TEXCOORD0.x;
					    u_xlat1.x = u_xlat1.x * _Scale + u_xlat9;
					    u_xlat1.y = vs_TEXCOORD0.y;
					    u_xlat1 = texture(_MainTex, u_xlat1.xy);
					    u_xlat1.xyz = u_xlat1.xyz * _Color.xyz;
					    u_xlat2 = u_xlat1 * vec4(_Alpha);
					    u_xlat1.xyz = u_xlat2.xyz * vs_TEXCOORD3.xyz;
					    u_xlat1.w = 0.0;
					    u_xlat1 = u_xlat2 + u_xlat1;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
					    SV_Target0.w = u_xlat1.w;
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat9 = vs_TEXCOORD4 / _ProjectionParams.y;
					    u_xlat9 = (-u_xlat9) + 1.0;
					    u_xlat9 = u_xlat9 * _ProjectionParams.z;
					    u_xlat9 = max(u_xlat9, 0.0);
					    u_xlat9 = u_xlat9 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
					    SV_Target0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//   float4 unity_FogColor;
					//   sampler2D unity_Lightmap;
					//   float4 unity_Lightmap_HDR;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _Time              c0       1
					//   unity_FogColor     c1       1
					//   unity_Lightmap_HDR c2       1
					//   _Color             c3       1
					//   _Alpha             c4       1
					//   _SpeedX            c5       1
					//   _SpeedY            c6       1
					//   _Scale             c7       1
					//   _TileX             c8       1
					//   _TileY             c9       1
					//   unity_Lightmap     s0       1
					//   _MainTex           s1       1
					//
					
					    ps_3_0
					    def c10, 0.159154937, 0.5, 6.28318548, -3.14159274
					    dcl_texcoord v0.xy
					    dcl_texcoord3 v1.xy
					    dcl_texcoord4 v2.x
					    dcl_2d s0
					    dcl_2d s1
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c5.x
					    mad r0.x, r0.x, c8.x, r0.z
					    mad r0.x, r0.x, c10.x, c10.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c10.z, c10.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c7.x, v0.x
					    mul r0.y, r0.y, c6.x
					    mad r0.y, v0.y, c9.x, r0.y
					    mad r0.y, r0.y, c10.x, c10.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c10.z, c10.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c7.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s1
					    mul_pp oC0.w, r0.w, c4.x
					    mul r0.xyz, r0, c3
					    mul_pp r0.xyz, r0, c4.x
					    texld_pp r1, v1, s0
					    mul_pp r0.w, r1.w, c2.x
					    mul_pp r1.xyz, r1, r0.w
					    mad r0.xyz, r0, r1, -c1
					    mov_sat r0.w, v2.x
					    mad_pp oC0.xyz, r0.w, r0, c1
					
					// approximately 41 instruction slots used (2 texture, 39 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[4];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						vec4 unused_0_9;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unused_2_1;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D unity_Lightmap;
					in  vec2 vs_TEXCOORD0;
					in  float vs_TEXCOORD4;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat10_0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec2 u_xlat2;
					float u_xlat6;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat2.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat0.x = u_xlat0.x * _TileX + u_xlat2.x;
					    u_xlat2.x = vs_TEXCOORD0.y * _TileY + u_xlat2.y;
					    u_xlat2.x = cos(u_xlat2.x);
					    u_xlat0.x = sin(u_xlat0.x);
					    u_xlat0.x = u_xlat0.x * _Scale + vs_TEXCOORD0.x;
					    u_xlat0.x = u_xlat2.x * _Scale + u_xlat0.x;
					    u_xlat0.y = vs_TEXCOORD0.y;
					    u_xlat10_0 = texture(_MainTex, u_xlat0.xy);
					    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;
					    SV_Target0.w = u_xlat10_0.w * _Alpha;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(_Alpha);
					    u_xlat10_1 = texture(unity_Lightmap, vs_TEXCOORD3.xy);
					    u_xlat6 = u_xlat10_1.w * unity_Lightmap_HDR.x;
					    u_xlat1.xyz = u_xlat10_1.xyz * vec3(u_xlat6);
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
					    u_xlat6 = vs_TEXCOORD4;
					    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
					    SV_Target0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//   sampler2D unity_DynamicLightmap;
					//   float4 unity_DynamicLightmap_HDR;
					//   float4 unity_FogColor;
					//   float4 unity_FogParams;
					//   sampler2D unity_Lightmap;
					//   float4 unity_Lightmap_HDR;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _Time                     c0       1
					//   unity_FogColor            c1       1
					//   unity_FogParams           c2       1
					//   unity_Lightmap_HDR        c3       1
					//   unity_DynamicLightmap_HDR c4       1
					//   _Color                    c5       1
					//   _Alpha                    c6       1
					//   _SpeedX                   c7       1
					//   _SpeedY                   c8       1
					//   _Scale                    c9       1
					//   _TileX                    c10      1
					//   _TileY                    c11      1
					//   unity_Lightmap            s0       1
					//   unity_DynamicLightmap     s1       1
					//   _MainTex                  s2       1
					//
					
					    ps_3_0
					    def c12, 0.159154937, 0.5, 6.28318548, -3.14159274
					    dcl_texcoord v0.xy
					    dcl_texcoord3 v1
					    dcl_texcoord4 v2.x
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c7.x
					    mad r0.x, r0.x, c10.x, r0.z
					    mad r0.x, r0.x, c12.x, c12.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c12.z, c12.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c9.x, v0.x
					    mul r0.y, r0.y, c8.x
					    mad r0.y, v0.y, c11.x, r0.y
					    mad r0.y, r0.y, c12.x, c12.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c12.z, c12.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c9.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s2
					    mul_pp oC0.w, r0.w, c6.x
					    mul r0.xyz, r0, c5
					    mul_pp r0.xyz, r0, c6.x
					    texld_pp r1, v1.zwzw, s1
					    mul_pp r0.w, r1.w, c4.x
					    mul_pp r1.xyz, r1, r0.w
					    log_pp r2.x, r1.x
					    log_pp r2.y, r1.y
					    log_pp r2.z, r1.z
					    mul_pp r1.xyz, r2, c4.y
					    exp_pp r2.x, r1.x
					    exp_pp r2.y, r1.y
					    exp_pp r2.z, r1.z
					    mul_pp r1.xyz, r0, r2
					    texld_pp r2, v1, s0
					    mul_pp r0.w, r2.w, c3.x
					    mul_pp r2.xyz, r2, r0.w
					    mad_pp r0.xyz, r0, r2, r1
					    add r0.xyz, r0, -c1
					    mad_sat r0.w, v2.x, c2.z, c2.w
					    mad_pp oC0.xyz, r0.w, r0, c1
					
					// approximately 53 instruction slots used (3 texture, 50 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unity_DynamicLightmap_HDR;
						vec4 unused_0_2[3];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						vec4 unused_0_10;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[4];
						vec4 _ProjectionParams;
						vec4 unused_1_3[3];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D unity_Lightmap;
					uniform  sampler2D unity_DynamicLightmap;
					in  vec2 vs_TEXCOORD0;
					in  float vs_TEXCOORD4;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat10_0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec4 u_xlat10_2;
					float u_xlat9;
					void main()
					{
					    u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
					    u_xlat9 = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
					    u_xlat0.xyz = u_xlat10_0.xyz * vec3(u_xlat9);
					    u_xlat0.xyz = log2(u_xlat0.xyz);
					    u_xlat0.xyz = u_xlat0.xyz * unity_DynamicLightmap_HDR.yyy;
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat9 = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat1.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat9 = u_xlat9 * _TileX + u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * _TileY + u_xlat1.y;
					    u_xlat1.x = cos(u_xlat1.x);
					    u_xlat9 = sin(u_xlat9);
					    u_xlat9 = u_xlat9 * _Scale + vs_TEXCOORD0.x;
					    u_xlat1.x = u_xlat1.x * _Scale + u_xlat9;
					    u_xlat1.y = vs_TEXCOORD0.y;
					    u_xlat10_1 = texture(_MainTex, u_xlat1.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    SV_Target0.w = u_xlat10_1.w * _Alpha;
					    u_xlat1.xyz = u_xlat1.xyz * vec3(_Alpha);
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat10_2 = texture(unity_Lightmap, vs_TEXCOORD3.xy);
					    u_xlat9 = u_xlat10_2.w * unity_Lightmap_HDR.x;
					    u_xlat2.xyz = u_xlat10_2.xyz * vec3(u_xlat9);
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat2.xyz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    u_xlat9 = vs_TEXCOORD4 / _ProjectionParams.y;
					    u_xlat9 = (-u_xlat9) + 1.0;
					    u_xlat9 = u_xlat9 * _ProjectionParams.z;
					    u_xlat9 = max(u_xlat9, 0.0);
					    u_xlat9 = u_xlat9 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
					    SV_Target0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "META"
			LOD 200
			Tags { "LIGHTMODE" = "META" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			ColorMask RGB -1
			ZClip Off
			ZWrite Off
			Cull Off
			GpuProgramID 93525
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 unity_DynamicLightmapST;
					//   float4 unity_LightmapST;
					//   row_major float4x4 unity_MatrixVP;
					//   bool4 unity_MetaVertexControl;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                    Reg   Size
					//   ----------------------- ----- ----
					//   unity_ObjectToWorld     c0       4
					//   unity_MatrixVP          c4       4
					//   unity_LightmapST        c8       1
					//   unity_DynamicLightmapST c9       1
					//   unity_MetaVertexControl c10      1
					//   _MainTex_ST             c11      1
					//
					
					    vs_3_0
					    def c12, 0, 9.99999975e-005, 1, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_texcoord1 v2
					    dcl_texcoord2 v3
					    dcl_position o0
					    dcl_texcoord o1.xy
					    slt r0.x, c12.x, v0.z
					    mul r0.z, r0.x, c12.y
					    mad r0.xy, v2, c8, c8.zwzw
					    lrp r1.xyz, c10.x, r0, v0
					    slt r0.x, c12.x, r1.z
					    mul r0.z, r0.x, c12.y
					    mad r0.xy, v3, c9, c9.zwzw
					    lrp r2.xyz, c10.y, r0, r1
					    mov r2.w, c12.z
					    dp4 r0.x, c0, r2
					    dp4 r0.y, c1, r2
					    dp4 r0.z, c2, r2
					    dp4 r0.w, c3, r2
					    dp4 r3.x, c4, r0
					    dp4 r3.y, c5, r0
					    dp4 r3.z, c6, r0
					    dp4 r3.w, c7, r0
					    mad o1.xy, v1, c11, c11.zwzw
					    mad o0.xy, r3.w, c255, r3
					    mov o0.zw, r3
					
					// approximately 20 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						vec4 unused_1_1[6];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[3];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unity_DynamicLightmapST;
					};
					layout(std140) uniform UnityMetaPass {
						bvec4 unity_MetaVertexControl;
						vec4 unused_4_1[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					in  vec4 in_TEXCOORD2;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					bool u_xlatb0;
					vec4 u_xlat1;
					bool u_xlatb6;
					void main()
					{
					    u_xlatb0 = 0.0<in_POSITION0.z;
					    u_xlat0.z = u_xlatb0 ? 9.99999975e-05 : float(0.0);
					    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    u_xlat0.xyz = (unity_MetaVertexControl.x) ? u_xlat0.xyz : in_POSITION0.xyz;
					    u_xlatb6 = 0.0<u_xlat0.z;
					    u_xlat1.z = u_xlatb6 ? 9.99999975e-05 : float(0.0);
					    u_xlat1.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
					    u_xlat0.xyz = (unity_MetaVertexControl.y) ? u_xlat1.xyz : u_xlat0.xyz;
					    u_xlat1 = u_xlat0.yyyy * unity_ObjectToWorld[1];
					    u_xlat1 = unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat0 = unity_ObjectToWorld[2] * u_xlat0.zzzz + u_xlat1;
					    u_xlat0 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat1 = u_xlat0.yyyy * unity_MatrixVP[1];
					    u_xlat1 = unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
					    gl_Position = unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Alpha;
					//   float4 _Color;
					//   sampler2D _MainTex;
					//   float _Scale;
					//   float _SpeedX;
					//   float _SpeedY;
					//   float _TileX;
					//   float _TileY;
					//   float4 _Time;
					//   float unity_MaxOutputValue;
					//   bool4 unity_MetaFragmentControl;
					//   float unity_OneOverOutputBoost;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _Time                     c0       1
					//   _Color                    c1       1
					//   _Alpha                    c2       1
					//   _SpeedX                   c3       1
					//   _SpeedY                   c4       1
					//   _Scale                    c5       1
					//   _TileX                    c6       1
					//   _TileY                    c7       1
					//   unity_MetaFragmentControl c8       1
					//   unity_OneOverOutputBoost  c9       1
					//   unity_MaxOutputValue      c10      1
					//   _MainTex                  s0       1
					//
					
					    ps_3_0
					    def c11, 0.159154937, 0.5, 6.28318548, -3.14159274
					    def c12, 0, 0.0235294141, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    add r0.x, v0.y, v0.x
					    mov r0.y, c0.y
					    mul r0.z, r0.y, c3.x
					    mad r0.x, r0.x, c6.x, r0.z
					    mad r0.x, r0.x, c11.x, c11.y
					    frc r0.x, r0.x
					    mad r0.x, r0.x, c11.z, c11.w
					    sincos r1.y, r0.x
					    mad r0.x, r1.y, c5.x, v0.x
					    mul r0.y, r0.y, c4.x
					    mad r0.y, v0.y, c7.x, r0.y
					    mad r0.y, r0.y, c11.x, c11.y
					    frc r0.y, r0.y
					    mad r0.y, r0.y, c11.z, c11.w
					    sincos r1.x, r0.y
					    mad r0.x, r1.x, c5.x, r0.x
					    mov r0.y, v0.y
					    texld_pp r0, r0, s0
					    mul r0.xyz, r0, c1
					    mul_pp r0.xyz, r0, c2.x
					    log r1.x, r0.x
					    log r1.y, r0.y
					    log r1.z, r0.z
					    mov_sat r0.x, c9.x
					    mul r0.xyz, r1, r0.x
					    exp_pp r1.x, r0.x
					    exp_pp r1.y, r0.y
					    exp_pp r1.z, r0.z
					    min_pp r0.xyz, c10.x, r1
					    mov r1.xy, c8
					    cmp_pp r0.xyz, -r1.x, c12.x, r0
					    mov r0.w, c8.x
					    cmp_pp oC0, -r1.y, r0, c12.xxxy
					
					// approximately 47 instruction slots used (1 texture, 46 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[5];
						vec4 _Color;
						float _Alpha;
						float _SpeedX;
						float _SpeedY;
						float _Scale;
						float _TileX;
						float _TileY;
						float unity_OneOverOutputBoost;
						float unity_MaxOutputValue;
						vec4 unused_0_10[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					layout(std140) uniform UnityMetaPass {
						vec4 unused_2_0;
						bvec4 unity_MetaFragmentControl;
						vec4 unused_2_2;
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_0;
					vec2 u_xlat1;
					float u_xlat3;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD0.y + vs_TEXCOORD0.x;
					    u_xlat1.xy = vec2(_SpeedX, _SpeedY) * _Time.yy;
					    u_xlat0.x = u_xlat0.x * _TileX + u_xlat1.x;
					    u_xlat1.x = vs_TEXCOORD0.y * _TileY + u_xlat1.y;
					    u_xlat1.x = cos(u_xlat1.x);
					    u_xlat0.x = sin(u_xlat0.x);
					    u_xlat0.x = u_xlat0.x * _Scale + vs_TEXCOORD0.x;
					    u_xlat0.x = u_xlat1.x * _Scale + u_xlat0.x;
					    u_xlat0.y = vs_TEXCOORD0.y;
					    u_xlat10_0 = texture(_MainTex, u_xlat0.xy);
					    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(_Alpha);
					    u_xlat0.xyz = log2(u_xlat0.xyz);
					    u_xlat3 = unity_OneOverOutputBoost;
					    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat3);
					    u_xlat0.xyz = exp2(u_xlat0.xyz);
					    u_xlat0.xyz = min(u_xlat0.xyz, vec3(vec3(unity_MaxOutputValue, unity_MaxOutputValue, unity_MaxOutputValue)));
					    u_xlat0.w = 1.0;
					    u_xlat0 = (unity_MetaFragmentControl.x) ? u_xlat0 : vec4(0.0, 0.0, 0.0, 0.0);
					    SV_Target0 = (unity_MetaFragmentControl.y) ? vec4(0.0, 0.0, 0.0, 0.0235294122) : u_xlat0;
					    return;
					}"
				}
			}
		}
	}
	Fallback "Diffuse"
}