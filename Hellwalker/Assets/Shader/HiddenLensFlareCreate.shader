Shader "Hidden/LensFlareCreate" {
	Properties {
		_MainTex ("Base (RGB)", 2D) = "" {}
	}
	SubShader {
		Pass {
			Blend One One, One One
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 50645
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//
					
					    vs_3_0
					    def c8, -1.45000005, 0.5, -2.54999995, -4.1500001
					    def c9, 1, 0, -0.5, 0.850000024
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    dcl_texcoord2 o3.xy
					    dcl_texcoord3 o4.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    add r0, c9.z, v1.xyxy
					    mad o1.xy, r0.zwzw, -c9.w, -c9.z
					    mad o2.xy, r0.zwzw, c8.x, c8.y
					    mad o3.xy, r0, c8.z, c8.y
					    mad o4.xy, r0.zwzw, c8.w, c8.y
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 16 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						vec4 unused_0_1[6];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_1_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_1_2[3];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					out vec2 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec2 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat1 = u_xlat0.yyyy * unity_MatrixVP[1];
					    u_xlat1 = unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
					    gl_Position = unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
					    u_xlat0 = in_TEXCOORD0.xyxy + vec4(-0.5, -0.5, -0.5, -0.5);
					    vs_TEXCOORD0.xy = u_xlat0.zw * vec2(-0.850000024, -0.850000024) + vec2(0.5, 0.5);
					    vs_TEXCOORD1.xy = u_xlat0.zw * vec2(-1.45000005, -1.45000005) + vec2(0.5, 0.5);
					    vs_TEXCOORD2.xy = u_xlat0.xy * vec2(-2.54999995, -2.54999995) + vec2(0.5, 0.5);
					    vs_TEXCOORD3.xy = u_xlat0.zw * vec2(-4.1500001, -4.1500001) + vec2(0.5, 0.5);
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 colorA;
					//   float4 colorB;
					//   float4 colorC;
					//   float4 colorD;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   colorA       c0       1
					//   colorB       c1       1
					//   colorC       c2       1
					//   colorD       c3       1
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    dcl_texcoord v0.xy
					    dcl_texcoord1 v1.xy
					    dcl_texcoord2 v2.xy
					    dcl_texcoord3 v3.xy
					    dcl_2d s0
					    texld r0, v1, s0
					    mul r0, r0, c1
					    texld r1, v0, s0
					    mad_pp r0, r1, c0, r0
					    texld r1, v2, s0
					    mad_pp r0, r1, c2, r0
					    texld r1, v3, s0
					    mad_pp oC0, r1, c3, r0
					
					// approximately 8 instruction slots used (4 texture, 4 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 colorA;
						vec4 colorB;
						vec4 colorC;
						vec4 colorD;
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					in  vec2 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					in  vec2 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_0;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat10_0 = texture(_MainTex, vs_TEXCOORD1.xy);
					    u_xlat0 = u_xlat10_0 * colorB;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat0 = u_xlat10_1 * colorA + u_xlat0;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat0 = u_xlat10_1 * colorC + u_xlat0;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD3.xy);
					    SV_Target0 = u_xlat10_1 * colorD + u_xlat0;
					    return;
					}"
				}
			}
		}
	}
}